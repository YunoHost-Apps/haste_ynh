#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE FAILURE OF THE SCRIPT
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THIS ARGS
#=================================================

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die "This path already contains a folder"

# Normalize the url path syntax
path_url=$(ynh_normalize_url_path $path_url)

if [ "$path_url" != "/" ]; then
	ynh_die "Only / is allowed"
fi

# Check web path availability
ynh_webpath_available $domain $path_url
# Register (book) web path
ynh_webpath_register $app $domain $path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

ynh_app_setting_set $app domain "$domain"
ynh_app_setting_set $app is_public "$is_public"
ynh_app_setting_set $app path_url "$path_url"

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================

# Find a free port
port=$(ynh_find_port 7777)
ynh_app_setting_set $app port $port
echo "port=$port" >&2

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

ynh_app_setting_set $app final_path $final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source "$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================

ynh_system_user_create $app

#=================================================
# SPECIFIC SETUP
#=================================================
# INSTALL NODEJS
#=================================================

ynh_install_nodejs 4

#=================================================
# ADD SYSTEMD SERVICE
#=================================================

ynh_replace_string "__NODEJS__" "$nodejs_use_version" "../conf/systemd.service"
ynh_replace_string "__ENV_PATH__" "$PATH" "../conf/systemd.service"
ynh_replace_string "__NODEPATH__" "$(dirname "$nodejs_path")" "../conf/systemd.service"

ynh_add_systemd_config

#=================================================
# INSTALL HASTEBIN
#=================================================

ynh_use_nodejs

(cd "$final_path"
chown -R $app: "$final_path"
npm install)

#=================================================
# CREATE DIRECTORY FOR DATA
#=================================================

data_path="/home/yunohost.app/$app"
mkdir -p "$data_path"

#=================================================
# CONFIGURE HASTE
#=================================================

cp ../conf/config.js "$final_path/config.js"
ynh_replace_string "__PORT__" "$port" "$final_path/config.js"
ynh_replace_string "__YNH_DATA_PATH__" "$data_path" "$final_path/config.js"

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum "$final_path/config.js"

#=================================================
# ADD HASTE AS A BINARY FILE
#=================================================

ynh_replace_string "__YNH_HASTE_URL__" "${domain}${path_url}" "../conf/haste.sh"
sudo cp ../conf/haste.sh /usr/bin/$app
sudo chmod +x /usr/bin/"$app"
echo "Please use 'cmd | $app' to paste the output of the command to your Haste server." >&2

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

chown -R root: $final_path
chown -R $app "$final_path/static"
chown -R $app "$data_path"

#=================================================
# HANDLE LOG FILES AND SETUP LOGROTATE
#=================================================

mkdir -p /var/log/$app
touch /var/log/$app/$app.log
chown $app -R /var/log/$app
ynh_use_logrotate

#=================================================
# ENABLE SERVICE IN ADMIN PANEL
#=================================================

yunohost service add $app --log "/var/log/$app/$app.log"

#=================================================
# START HASTEBIN
#=================================================

systemctl start $app

#=================================================
# SETUP SSOWAT
#=================================================

if [ $is_public -eq 1 ];
then
  ynh_app_setting_set $app skipped_uris "/"
fi

#=================================================
# RELOAD NGINX
#=================================================

systemctl reload nginx
